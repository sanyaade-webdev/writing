#!/usr/bin/env ruby

require "thor"
require "writing"

class Application < Thor
  include Thor::Actions

  default_task :build

  desc "generate NAME", "Generate a new instance"
  method_option :github,   :type => :boolean, :aliases => "-g", :desc => "Generate for GitHub Pages"
  method_option :template, :type => :string,  :aliases => "-t", :desc => "The template to use", :default => "default"
  def generate(name = ".")
    directory options[:template], name

    inside(name) do
      empty_directory "posts"

      create_file("_config.yml") do
        "exclude:\n  - posts\n  - public\n  - index.html.erb\n"
      end if options.github?
    end
  end

  desc "build", "Build the output file"
  method_option :auto,     :type => :boolean, :aliases => "-a", :desc => "Automatically rebuild the output file"
  method_option :compress, :type => :boolean, :aliases => "-c", :desc => "Enable CSS and JS compression"
  method_option :server,   :type => :numeric, :aliases => "-s", :desc => "Start a server to serve the output file", :default => 4001, :lazy_default => 4001
  method_option :verbose,  :type => :boolean, :aliases => "-v", :desc => "Enable verbose output"
  def build
    instance = Writing.new(options)

    if options.auto?
      instance.start
    else
      instance.update
    end
  end

  def self.source_root
    File.expand_path(File.join(File.dirname(__FILE__), "..", "lib", "templates"))
  end
end

Application.start
